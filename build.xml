<?xml version="1.0"?>

<!--
	Build file for spy.jar

	Copyright (c) 2002	Dustin Sallings <dustin@spy.net>

	$Id: build.xml,v 1.26 2003/09/18 18:51:16 dustin Exp $

	-->

<project name="spy.jar" default="spy.jar" basedir=".">

	<!-- Setup -->

	<!-- Load the build properties -->
	<property file="build.properties"/>

	<path id="myclasses">
		<fileset dir="${JARPATH}">
			<include name="jndi.jar"/>
			<include name="jdbc2_0-stdext.jar"/>
			<include name="log4j*.jar"/>
		</fileset>
		<pathelement path="${java.class.path}"/>
		<pathelement path="${BUILDDIR}"/>
		<pathelement path="${SRCDIR}"/>
	</path>

	<path id="junitclasses">
		<fileset dir="${JARPATH}">
			<include name="junit.jar"/>
			<include name="spytest.jar"/>
			<include name="${JDBCDRIVERJAR}"/>
		</fileset>
		<fileset dir=".">
			<include name="testsuite.jar"/>
		</fileset>
	</path>

	<!-- end setup -->

	<target name="clean" description="Clean up all generated files.">
		<delete dir="=build"/>
		<delete file="spy.jar"/>
		<delete file="spy-big.jar"/>
		<delete file="testsuite.jar"/>
	</target>

	<target name="docs" depends="all,properties" unless="docs.upToDate">
		<mkdir dir="${DOCDEST}"/>
		<javadoc destdir="${DOCDEST}"
			author="true"
			version="true"
            sourcepath="${SRCDIR}"
			use="true"
			protected="true"
			packagenames="net.spy.*"
			windowtitle="Spy.jar Documentation - build ${build.number} from ${build.date}"
			doctitle="Spy.jar Documentation - build ${build.number} from ${build.date}">
			<link href="http://java.sun.com/j2se/1.4/docs/api/"/>
		</javadoc>
        <!--
        <sourcepath>
            <include name="${SRCDIR}"/>
            <include name="${GENDIR}"/>
        </sourcepath>
        -->
		<mkdir dir="${DOCDEST}/images"/>
		<copy file="etc/graphtest.png" tofile="${DOCDEST}/images/graphtest.png"/>
		<property name="docs.upToDate" value="true"/>
	</target>

	<target name="docs.jar" depends="docs" unless="docs.jar.upToDate">
		<jar jarfile="docs.jar">
			<fileset dir="${DOCDEST}">
				<include name="**/*.html"/>
				<include name="**/*.css"/>
				<include name="**/*.png"/>
				<include name="package-list"/>
			</fileset>
		</jar>
		<property name="docs.jar.upToDate" value="true"/>
	</target>

	<!-- install everywhere -->
	<target name="full-install" depends="install,spy-install,install-docs"
		description="Full install (install, spy-install, install-docs)"/>

	<!-- Install various locations I use the jar around the house. -->
	<target name="spy-install" depends="spy.jar">
		<copy file="spy.jar" tofile="/afs/.spy.net/misc/web/java/jar/spy.jar"/>
		<copy file="spy.jar"
			tofile="/afs/.spy.net/misc/web/root/money/WEB-INF/lib/spy.jar"/>
		<copy file="spy.jar"
			tofile="/afs/.spy.net/misc/web/root/therm/WEB-INF/lib/spy.jar"/>
		<copy file="spy.jar"
			tofile="/afs/.spy.net/misc/web/root/photo/WEB-INF/lib/spy.jar"/>
		<copy file="spy.jar"
			tofile="/afs/.spy.net/misc/web/root/beckerphoto/WEB-INF/lib/spy.jar"/>
		<copy file="spy.jar"
			tofile="/afs/.spy.net/misc/web/root/wisephoto/WEB-INF/lib/spy.jar"/>
		<copy file="spy.jar"
			tofile="/afs/.spy.net/misc/web/root/jasonphoto/WEB-INF/lib/spy.jar"/>
		<copy file="spy.jar"
			tofile="/afs/.spy.net/misc/web/root/photodemo/WEB-INF/lib/spy.jar"/>
		<copy file="spy.jar"
			tofile="/afs/.spy.net/misc/web/root/init/WEB-INF/lib/spy.jar"/>
	</target>

	<!-- Regular install -->
	<target name="install" depends="install-jars,install-docs"
		description="Install the distribution and documentation for it"/>

	<target name="install-jars" depends="spy.jar,spy-big.jar">
		<copy file="spy.jar"
			tofile="/afs/spy.net/home/dustin/public_html/soft/spy.jar"/>
		<copy file="spy.jar" tofile="${user.home}/lib/java/spy.jar"/>
		<copy file="spy-big.jar"
			tofile="/afs/spy.net/home/dustin/public_html/soft/spy-big.jar"/>
	</target>

	<target name="install-docs" depends="docs">
		<copy todir="/afs/spy.net/home/dustin/public_html/spyjar/j2/doc/">
			<fileset dir="${DOCDEST}">
				<include name="**/*.html"/>
				<include name="**/*.css"/>
				<include name="**/*.png"/>
				<include name="package-list"/>
			</fileset>
		</copy>
	</target>

	<target name="spy.jar" depends="all,properties"
		description="Create a lightweight jar (no docs or source)"
		unless="spy.jar.upToDate">
		<jar jarfile="spy.jar" index="true">
			<manifest>
				<attribute name="Main-Class" value="net.spy.BuildInfo"/>
			</manifest>
			<fileset dir="${BUILDDIR}">
				<include name="net/spy/**/*.class"/>
				<include name="net/spy/**/*.properties"/>
				<include name="net/spy/**/*.txt"/>
			</fileset>
			<fileset dir=".">
				<include name="etc/license.txt"/>
			</fileset>
		</jar>
		<property name="spy.jar.upToDate" value="true"/>
	</target>

	<target name="spy-big.jar" unless="spy-big.jar.upToDate"
		depends="all,properties,docs,testjar"
		description="Build the big jar - classes, sources, docs, oh my!">
		<jar jarfile="spy-big.jar" index="true">
			<manifest>
				<attribute name="Main-Class" value="net.spy.BuildInfo"/>
			</manifest>
			<fileset dir="${BUILDDIR}">
				<include name="net/spy/**/*.class"/>
				<include name="net/spy/**/*.properties"/>
				<include name="net/spy/**/*.txt"/>
			</fileset>
			<fileset dir="${DOCDEST}/../">
				<include name="docs/**/*.html"/>
				<include name="docs/**/*.css"/>
				<include name="docs/package-list"/>
			</fileset>
			<fileset dir="${SRCDIR}/../">
				<include name="src/net/spy/**/*.java"/>
			</fileset>
			<fileset dir=".">
				<include name="build.xml"/>
				<include name="testsuite.jar"/>
				<include name="etc/test.sql"/>
				<include name="etc/license.txt"/>
			</fileset>
		</jar>
		<property name="spy-big.jar.upToDate" value="true"/>
	</target>

	<target name="testjar" depends="test-classes">
		<jar jarfile="testsuite.jar" basedir="${TBUILDDIR}">
			<include name="net/spy/**/*.class"/>
			<include name="net/spy/**/*.java"/>
			<include name="net/spy/**/*.properties"/>
		</jar>
	</target>

	<!-- Build properties, memorabilia, etc... -->
	<target name="properties" unless="properties.upToDate">
		<delete file="${BUILDDIR}/net/spy/build.properties"/>
		<buildnumber file="etc/build.number"/>
		<!-- Find the current patch level of this tree -->
		<exec executable="./etc/tree-version" outputproperty="tree.version"/>
		<exec executable="./etc/get-changelog"
			output="${BUILDDIR}/net/spy/changelog.txt"/>
		<propertyfile file="${BUILDDIR}/net/spy/build.properties">
			<entry key="java.vendor" value="${java.vendor}"/>
			<entry key="java.version" value="${java.version}"/>
			<entry key="os.name" value="${os.name}"/>
			<entry key="os.version" value="${os.version}"/>
			<entry key="build.number" value="${build.number}"/>
			<entry key="build.date" type="date" value="now"/>
			<entry key="tree.version" value="${tree.version}"/>
		</propertyfile>
		<property file="${BUILDDIR}/net/spy/build.properties"/>
		<copy todir="${BUILDDIR}">
			<fileset dir="${SRCDIR}">
				<include name="**/*.properties"/>
			</fileset>
		</copy>
		<property name="properties.upToDate" value="true"/>
	</target>

	<target name="checkBuildProps">
		<available file="build.properties" property="hasBuildProps"/>
	</target>

	<!-- Create the build.properties file if the user doesn't have one -->
	<target name="buildprops" unless="hasBuildProps" depends="checkBuildProps"
		description="Create a build.properties file *** MUST BE DONE FIRST ***">
		<propertyfile file="build.properties">
			<entry key="SRCDIR" value="src"/>
			<entry key="BUILDTOP" value="=build"/>
			<entry key="BUILDDIR" value="${BUILDTOP}/classes"/>
			<entry key="GENDIR" value="${BUILDTOP}/gen"/>
			<entry key="TSRCDIR" value="tests"/>
			<entry key="TBUILDDIR" value="${BUILDTOP}/tests"/>
			<entry key="TGENDIR" value="${BUILDTOP}/tests-gen"/>
			<entry key="DOCDEST" value="${BUILDTOP}/docs"/>
			<entry key="DEPRECATION" value="on"/>
			<entry key="DEBUG" value="on"/>
			<entry key="VERBOSE" value="off"/>
			<!-- Location of extra jars for classpaths -->
			<entry key="JARPATH" value="${user.home}/lib/java"/>
			<!-- Driver to use for DB tests, expected to be found in JARPATH -->
			<entry key="JDBCDRIVERJAR" value="postgresql.jar"/>
		</propertyfile>

		<echo message=""/>
		<echo message="*** You must run your build again (ignore this failure)!"/>
		<echo message=""/>
		<fail message="You must run your build again"/>

	</target>

	<target name="prepare">
		<mkdir dir="${BUILDTOP}"/>
		<mkdir dir="${BUILDDIR}"/>
		<mkdir dir="${TBUILDDIR}"/>
		<mkdir dir="${TGENDIR}"/>
		<mkdir dir="${GENDIR}"/>
	</target>

	<!-- this is a bit of indirection to allow the compile to require props -->
	<target name="all" depends="buildprops,prepare" if="hasBuildProps">
		<antcall target="compile"/>
	</target>

	<!-- Optional components -->

	<target name="check-sunlog">
		<available classname="java.util.logging.Logger" property="has.sunlog"/>
	</target>

	<target name="optional-sunlog" depends="check-sunlog" if="has.sunlog">
		<copy file="${SRCDIR}/net/spy/log/SunLogger.ojava"
			tofile="${GENDIR}/net/spy/log/SunLogger.java"/>
	</target>

	<target name="check-log4j">
		<available classname="org.apache.log4j.Logger" property="has.log4j">
			<classpath refid="myclasses"/>
		</available>
	</target>

	<target name="optional-log4j" depends="check-log4j" if="has.log4j">
		<copy file="${SRCDIR}/net/spy/log/Log4JLogger.ojava"
			tofile="${GENDIR}/net/spy/log/Log4JLogger.java"/>
	</target>


	<target name="optional" depends="optional-sunlog,optional-log4j"/>

	<!-- End optional components -->

	<target name="compile" depends="optional,rmic,dbstuff">
		<javac
			srcdir="${SRCDIR}"
			destdir="${BUILDDIR}"
			deprecation="${DEPRECATION}"
			debug="${DEBUG}"
			verbose="${VERBOSE}">

			<classpath refid="myclasses"/>
		</javac>
		<javac
			srcdir="${GENDIR}"
			destdir="${BUILDDIR}"
			deprecation="${DEPRECATION}"
			debug="${DEBUG}"
			verbose="${VERBOSE}">

			<classpath refid="myclasses"/>
		</javac>
	</target>

	<target name="spgen">
		<javac srcdir="${SRCDIR}"
			destdir="${BUILDDIR}"
			deprecation="${DEPRECATION}"
			debug="${DEBUG}"
			verbose="${VERBOSE}">

			<classpath refid="myclasses"/>
			<include name="net/spy/util/SPGen*.java"/>
		</javac>
		<taskdef name="spgen" classname="net.spy.util.SPGenTask">
			<classpath refid="myclasses"/>
		</taskdef>
	</target>

	<target name="test-spfiles" depends="all,spgen">
		<spgen srcdir="${TSRCDIR}" destdir="${TGENDIR}"/>
		<javac srcdir="${TGENDIR}" destdir="${TBUILDDIR}"
			deprecation="${DEPRECATION}" debug="${DEBUG}" verbose="${VERBOSE}">
			<classpath refid="myclasses"/>
			<classpath refid="junitclasses"/>
      <classpath>
        <pathelement path="${TBUILDDIR}"/>
			</classpath>
			<include name="net/spy/**/*.java"/>
		</javac>
	</target>

	<target name="test-classes" depends="all,test-spfiles">
		<javac srcdir="${TSRCDIR}" destdir="${TBUILDDIR}"
			deprecation="${DEPRECATION}" debug="${DEBUG}" verbose="${VERBOSE}">
			<classpath refid="myclasses"/>
			<classpath refid="junitclasses"/>
			<include name="net/spy/**/*.java"/>
		</javac>
	</target>

	<target name="lookForTestJar">
		<available file="testsuite.jar" property="hasTestSuiteJar"/>
	</target>

	<target name="test-suite" depends="lookForTestJar" unless="hasTestSuiteJar">
		<antcall target="test-classes"/>
	</target>

  <target name="tests" depends="test-suite">
    <java classname="net.spy.test.AllTests">
			<classpath refid="myclasses"/>
			<classpath refid="junitclasses"/>
      <classpath>
        <pathelement path="${TBUILDDIR}"/>
			</classpath>
    </java>
  </target>

  <target name="tests-db" depends="test-suite"
		description="Perform DB tests.">
    <java classname="net.spy.test.DBTest" fork="yes">
			<classpath refid="myclasses"/>
			<classpath refid="junitclasses"/>
      <classpath>
        <pathelement path="${TBUILDDIR}"/>
			</classpath>
    </java>
  </target>

  <target name="tests-quick" depends="test-suite"
		description="Perform all tests that don't take all day.">
    <java classname="net.spy.test.QuickTests" fork="yes">
			<classpath refid="myclasses"/>
			<classpath refid="junitclasses"/>
      <classpath>
        <pathelement path="${TBUILDDIR}"/>
			</classpath>
    </java>
  </target>

  <target name="tests-sp" depends="test-suite"
		description="Test the shortest path algorithm.">
    <java classname="net.spy.test.ShortestPathTest" fork="yes">
			<classpath refid="myclasses"/>
			<classpath refid="junitclasses"/>
      <classpath>
        <pathelement path="${TBUILDDIR}"/>
			</classpath>
    </java>
  </target>

  <target name="tests-diskcache" depends="test-suite"
		description="Test the Disk Cache implementation.">
    <java classname="net.spy.test.DiskCacheTest" fork="yes">
			<classpath refid="myclasses"/>
			<classpath refid="junitclasses"/>
      <classpath>
        <pathelement path="${TBUILDDIR}"/>
			</classpath>
    </java>
  </target>

  <target name="tests-gui" depends="test-suite"
		description="Start the JUnit GUI">
    <java classname="junit.swingui.TestRunner" fork="yes">
			<sysproperty key="net.spy.log.LoggerImpl" value="${loggerimpl}"/> 
			<classpath refid="myclasses"/>
			<classpath refid="junitclasses"/>
      <classpath>
        <pathelement path="${TBUILDDIR}"/>
			</classpath>
    </java>
  </target>

	<target name="dbstuff" depends="types,resultsets,preparedstatement,spfiles">
	</target>

	<!-- type name map -->
	<target name="types">
		<mkdir dir="${GENDIR}/net/spy/db"/>
		<javac
			srcdir="${SRCDIR}" destdir="${BUILDDIR}"
			deprecation="${DEPRECATION}" debug="${DEBUG}" verbose="${VERBOSE}">
			<classpath refid="myclasses"/>
			<include name="net/spy/util/TypeNameGen.java"/>
		</javac>
		<java classname="net.spy.util.TypeNameGen">
			<arg value="${GENDIR}/net/spy/db/TypeNames.java"/>
			<classpath refid="myclasses"/>
		</java>
		<javac
			srcdir="${GENDIR}" destdir="${BUILDDIR}"
			deprecation="${DEPRECATION}" debug="${DEBUG}" verbose="${VERBOSE}">
			<classpath refid="myclasses"/>
			<include name="net/spy/db/TypeNames.java"/>
		</javac>
	</target>

	<target name="spfiles" depends="spgen">
		<spgen srcdir="${SRCDIR}" destdir="${GENDIR}"/>
		<!-- Go ahead and compile the stuff -->
		<javac
			srcdir="${SRCDIR}" destdir="${BUILDDIR}"
			deprecation="${DEPRECATION}" debug="${DEBUG}" verbose="${VERBOSE}">
			<classpath refid="myclasses"/>
			<include name="net/spy/db/DB*java"/>
		</javac>
		<javac
			srcdir="${GENDIR}" destdir="${BUILDDIR}"
			deprecation="${DEPRECATION}" debug="${DEBUG}" verbose="${VERBOSE}">
			<classpath refid="myclasses"/>
			<include name="net/spy/db/**"/>
		</javac>
	</target>

	<!-- Build the result set -->
	<target name="checkrsupdate">
		<uptodate property="crs.uptodate"
			srcfile="${SRCDIR}/net/spy/db/CachedResultSetStub.java"
			targetfile="${GENDIR}/net/spy/db/CachedResultSet.java"/>
		<uptodate property="prs.uptodate"
			srcfile="${SRCDIR}/net/spy/util/ProxyInterfaceImplementor.java"
			targetfile="${GENDIR}/net/spy/db/ProxyResultSet.java"/>
	</target>

	<!-- Targets for result sets -->
	<target name="resultsets" depends="cachers,proxyrs"/>

	<!-- real target for the result set -->
	<target name="cachers" unless="crs.uptodate"
		depends="checkrsupdate,interfaceimplementor">
		<javac
			srcdir="${SRCDIR}" destdir="${BUILDDIR}"
			deprecation="${DEPRECATION}" debug="${DEBUG}" verbose="${VERBOSE}">
			<classpath refid="myclasses"/>
			<include name="net/spy/db/CachedResultSetStub.java"/>
		</javac>
		<java classname="net.spy.util.InterfaceImplementor" >
			<arg value="-interface"/>
				<arg value="java.sql.ResultSet"/>
			<arg value="-superclass"/>
				<arg value="net.spy.db.CachedResultSetStub"/>
			<arg value="-outputclass"/>
				<arg value="net.spy.db.CachedResultSet"/>
			<arg value="-outputdir"/>
				<arg value="${GENDIR}"/>
			<classpath refid="myclasses"/>
		</java>
		<javac
			srcdir="${GENDIR}" destdir="${BUILDDIR}"
			deprecation="${DEPRECATION}" debug="${DEBUG}" verbose="${VERBOSE}">
			<classpath refid="myclasses"/>
			<include name="net/spy/db/CachedResultSet.java"/>
		</javac>
	</target>

	<target name="proxyrs" unless="prs.uptodate"
		depends="checkrsupdate,proxyii">
		<java classname="net.spy.util.ProxyInterfaceImplementor" >
			<arg value="-interface"/>
				<arg value="java.sql.ResultSet"/>
			<arg value="-superclass"/>
				<arg value="net.spy.SpyObject"/>
			<arg value="-outputclass"/>
				<arg value="net.spy.db.ProxyResultSet"/>
			<arg value="-outputdir"/>
				<arg value="${GENDIR}"/>
			<classpath refid="myclasses"/>
		</java>
		<javac
			srcdir="${GENDIR}" destdir="${BUILDDIR}"
			deprecation="${DEPRECATION}" debug="${DEBUG}" verbose="${VERBOSE}">
			<classpath refid="myclasses"/>
			<include name="net/spy/db/ProxyResultSet.java"/>
		</javac>
	</target>

	<!-- Build the prepared statement set -->
	<target name="checkpstupdate">
		<uptodate property="pst.uptodate"
			srcfile="net/spy/db/CachePreparedStatementStub.java"
			targetfile="net/spy/db/CachePreparedStatement.java"/>
	</target>

	<!-- The real target for prepared statements -->
	<target name="preparedstatement" unless="pst.uptodate"
		depends="checkpstupdate,resultsets,interfaceimplementor">
		<javac
			srcdir="${SRCDIR}" destdir="${BUILDDIR}"
			deprecation="${DEPRECATION}" debug="${DEBUG}" verbose="${VERBOSE}">
			<classpath refid="myclasses"/>
			<include name="net/spy/db/CachePreparedStatementStub.java"/>
		</javac>
		<java classname="net.spy.util.InterfaceImplementor" >
			<arg value="-interface"/>
				<arg value="java.sql.PreparedStatement"/>
			<arg value="-superclass"/>
				<arg value="net.spy.db.CachePreparedStatementStub"/>
			<arg value="-outputclass"/>
				<arg value="net.spy.db.CachePreparedStatement"/>
			<arg value="-outputdir"/>
				<arg value="${GENDIR}"/>
			<classpath refid="myclasses"/>
		</java>
		<javac
			srcdir="${GENDIR}" destdir="${BUILDDIR}"
			deprecation="${DEPRECATION}" debug="${DEBUG}" verbose="${VERBOSE}">
			<classpath refid="myclasses"/>
			<include name="net/spy/db/CachePreparedStatement.java"/>
		</javac>

	</target>

	<target name="interfaceimplementor">
		<javac
			srcdir="${SRCDIR}" destdir="${BUILDDIR}"
			deprecation="${DEPRECATION}" debug="${DEBUG}" verbose="${VERBOSE}">
			<classpath refid="myclasses"/>
			<include name="net/spy/util/InterfaceImplementor.java"/>
		</javac>
	</target>

	<target name="proxyii">
		<javac
			srcdir="${SRCDIR}" destdir="${BUILDDIR}"
			deprecation="${DEPRECATION}" debug="${DEBUG}" verbose="${VERBOSE}">
			<classpath refid="myclasses"/>
			<include name="net/spy/util/ProxyInterfaceImplementor.java"/>
		</javac>
	</target>

	<target name="rmic" depends="pre-rmic">
		<rmic base="${BUILDDIR}" classname="net.spy.rmi.RObjectImpl">
			<classpath refid="myclasses"/>
		</rmic>
	</target>

	<target name="pre-rmic">
		<javac
			srcdir="${SRCDIR}" destdir="${BUILDDIR}"
			deprecation="${DEPRECATION}" debug="${DEBUG}" verbose="${VERBOSE}">
			<classpath refid="myclasses"/>
			<include name="net/spy/rmi/RObjectImpl.java"/>
		</javac>
	</target>

	<!-- import scrubber -->
	<target name="scrubimports">
		<taskdef name="scrub"
			classname="net.sourceforge.importscrubber.ant.ImportScrubberTask">
			<classpath refid="myclasses"/>
			<classpath>
				<fileset dir="${user.home}/lib/importscrubber">
					<include name="*.jar"/>
				</fileset>
			</classpath>
		</taskdef>

		<scrub root="." format="each" sortjavalibshigh="true" recurse="true"/>
	</target>

	<!-- PMD code checker -->
	<target name="pmd">
		<taskdef name="pmd" classname="net.sourceforge.pmd.ant.PMDTask">
			<classpath>
				<fileset dir="${JARPATH}">
					<include name="pmd-0.3.jar"/>
				</fileset>
			</classpath>
		</taskdef>
		<pmd reportFile="pmd-unused-report.html"
			rulesetfiles="rulesets/unusedcode.xml"
			format="html">
			<fileset dir=".">
				<include name="net/spy/**/*.java"/>
			</fileset>
		</pmd>
		<pmd reportFile="pmd-basic-report.html"
			rulesetfiles="rulesets/basic.xml"
			format="html">
			<fileset dir=".">
				<include name="net/spy/**/*.java"/>
			</fileset>
		</pmd>
		<pmd reportFile="pmd-design-report.html"
			rulesetfiles="rulesets/design.xml"
			format="html">
			<fileset dir=".">
				<include name="net/spy/**/*.java"/>
			</fileset>
		</pmd>
	</target>

	<!-- checkstyle -->
	<target name="checkstyle">
		<taskdef name="checkstyle"
			classname="com.puppycrawl.tools.checkstyle.CheckStyleTask">
			<classpath>
				<fileset dir="${user.home}/lib/checkstyle">
					<include name="*.jar"/>
				</fileset>
			</classpath>
		</taskdef>

		<delete file="checkstyle_report.xml"/>

		<checkstyle config="etc/checkstyle_config.xml" failOnViolation="false">
			<formatter type="xml" tofile="checkstyle_report.xml"/>
			<fileset dir=".">
				<include name="net/spy/**/*.java"/>
				<include name="net/spy/**/*.ojava"/>
				<exclude name="net/spy/db/sp/*.java"/>
				<exclude name="net/spy/db/CachedResultSet.java"/>
				<exclude name="net/spy/db/CachePreparedStatement.java"/>
				<exclude name="net/spy/db/TypeNames.java"/>
			</fileset>
		</checkstyle>

		<style in="checkstyle_report.xml"
			out="checkstyle_report.html"
			style="etc/checkstyle.xsl"/>
	</target>

	<target name="simian">
		<taskdef resource="simiantask.properties"/>
		<simian lineCount="6">
			<fileset dir="net" includes="**/*.java" />
		</simian>
	</target>

</project>
