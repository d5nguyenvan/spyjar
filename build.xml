<?xml version="1.0"?>

<!--
	Build file for spy.jar

	Copyright (c) 2002	Dustin Sallings <dustin@spy.net>

	$Id: build.xml,v 1.5 2002/08/29 00:46:13 dustin Exp $

	-->

<project name="spy.jar" default="spy.jar" basedir=".">

	<!-- Setup -->

	<!-- Load the build properties -->
	<property file="build.properties"/>

	<path id="myclasses">
		<fileset dir="${JARPATH}">
			<include name="jndi.jar"/>
			<include name="jdbc2_0-stdext.jar"/>
		</fileset>
		<pathelement path="${java.class.path}"/>
		<pathelement path="."/>
	</path>

	<path id="junitclasses">
		<fileset dir="${JARPATH}">
			<include name="junit.jar"/>
			<include name="spytest.jar"/>
		</fileset>
		<fileset dir=".">
			<include name="testsuite.jar"/>
		</fileset>
	</path>

	<!-- end setup -->

	<target name="clean" description="Clean up all generated files.">
		<delete>
			<fileset dir="${BUILDDIR}/net">
				<include name="**/*.class"/>
				<include name="spy/build.properties"/>
				<include name="spy/db/TypeNames.java"/>
				<include name="spy/db/CachePreparedStatement.java"/>
				<include name="spy/db/CachedResultSet.java"/>
				<include name="spy/db/sp/*.java"/>
			</fileset>
			<!--
				Get rid of the installed one since it keeps messing with my
				tests
			-->
			<fileset dir="${JARPATH}">
				<include name="spy.jar"/>
			</fileset>
			<fileset dir="${TBUILDDIR}">
				<include name="**/*.class"/>
				<include name="net/spy/test/db/*.java"/>
			</fileset>
			<fileset dir=".">
				<include name="spy.jar"/>
				<include name="testsuite.jar"/>
				<include name="checkstyle.txt"/>
			</fileset>
		</delete>
	</target>

	<target name="docs" depends="all,properties" unless="docs.upToDate">
		<mkdir dir="docs"/>
		<javadoc destdir="${DOCDEST}"
			author="true"
			version="true"
			use="true"
			sourcePath="${SRCDIR}"
			protected="true"
			packagenames="net.spy.*"
			windowtitle="Spy.jar Documentation - build ${build.number} from ${build.date}"
			doctitle="Spy.jar Documentation - build ${build.number} from ${build.date}">
			<link href="http://java.sun.com/j2se/1.3/docs/api/"/>
		</javadoc>
		<property name="docs.upToDate" value="true"/>
	</target>

	<!-- install everywhere -->
	<target name="full-install" depends="install,spy-install"
		description="Full install (install and spy-install)"/>

	<!-- Install various locations I use the jar around the house. -->
	<target name="spy-install" depends="spy.jar">
		<copy file="spy.jar" tofile="/afs/.spy.net/misc/web/java/jar/spy.jar"/>
		<copy file="spy.jar"
			tofile="/afs/.spy.net/misc/web/root/money/WEB-INF/lib/spy.jar"/>
		<copy file="spy.jar"
			tofile="/afs/.spy.net/misc/web/root/therm/WEB-INF/lib/spy.jar"/>
		<copy file="spy.jar"
			tofile="/afs/.spy.net/misc/web/root/photo/WEB-INF/lib/spy.jar"/>
		<copy file="spy.jar"
			tofile="/afs/.spy.net/misc/web/root/beckerphoto/WEB-INF/lib/spy.jar"/>
	</target>

	<!-- Regular install -->
	<target name="install" depends="install-jars,install-docs"
		description="Install the distribution and documentation for it"/>

	<target name="install-jars" depends="spy.jar,spy-big.jar">
		<copy file="spy.jar"
			tofile="/afs/spy.net/home/dustin/public_html/soft/spy.jar"/>
		<copy file="spy.jar" tofile="${user.home}/lib/java/spy.jar"/>
		<copy file="spy-big.jar"
			tofile="/afs/spy.net/home/dustin/public_html/soft/spy-big.jar"/>
	</target>

	<target name="install-docs" depends="docs">
		<copy todir="/afs/spy.net/home/dustin/public_html/spyjar/j2/doc/">
			<fileset dir="docs">
				<include name="**/*.html"/>
				<include name="**/*.css"/>
				<include name="package-list"/>
			</fileset>
		</copy>
	</target>

	<target name="spy.jar" depends="all,properties"
		description="Create a lightweight jar (no docs or source)"
		unless="spy.jar.upToDate">
		<jar jarfile="spy.jar" basedir=".">
			<manifest>
				<attribute name="Main-Class" value="net.spy.BuildInfo"/>
			</manifest>
			<include name="net/spy/**/*.class"/>
			<include name="net/spy/**/*.properties"/>
			<include name="etc/license.txt"/>
		</jar>
		<property name="spy.jar.upToDate" value="true"/>
	</target>

	<target name="spy-big.jar" unless="spy-big.jar.upToDate"
		depends="all,properties,docs,testjar"
		description="Build the big jar - classes, sources, docs, oh my!">
		<jar jarfile="spy-big.jar" basedir=".">
			<manifest>
				<attribute name="Main-Class" value="net.spy.BuildInfo"/>
			</manifest>
			<include name="build.xml"/>
			<include name="docs/**/*.html"/>
			<include name="docs/**/*.css"/>
			<include name="docs/package-list"/>
			<include name="net/spy/**/*.class"/>
			<include name="net/spy/**/*.java"/>
			<include name="net/spy/**/*.properties"/>
			<include name="testsuite.jar"/>
			<include name="etc/test.sql"/>
			<include name="etc/license.txt"/>
		</jar>
		<property name="spy-big.jar.upToDate" value="true"/>
	</target>

	<target name="testjar" depends="test-classes">
		<jar jarfile="testsuite.jar" basedir="${TBUILDDIR}">
			<include name="net/spy/**/*.class"/>
			<include name="net/spy/**/*.java"/>
			<include name="net/spy/**/*.properties"/>
		</jar>
	</target>

	<!-- Build properties, memorabilia, etc... -->
	<target name="properties" unless="properties.upToDate">
		<delete file="${BUILDDIR}/net/spy/build.properties"/>
		<buildnumber file="etc/build.number"/>
		<propertyfile file="${BUILDDIR}/net/spy/build.properties">
			<entry key="java.vendor" value="${java.vendor}"/>
			<entry key="java.version" value="${java.version}"/>
			<entry key="os.name" value="${os.name}"/>
			<entry key="os.version" value="${os.version}"/>
			<entry key="build.number" value="${build.number}"/>
			<entry key="build.date" type="date" value="now"/>
		</propertyfile>
		<property file="${BUILDDIR}/net/spy/build.properties"/>
		<property name="properties.upToDate" value="true"/>
	</target>

	<target name="checkBuildProps">
		<available file="build.properties" property="hasBuildProps"/>
	</target>

	<!-- Create the build.properties file if the user doesn't have one -->
	<target name="buildprops" unless="hasBuildProps" depends="checkBuildProps"
		description="Create a build.properties file *** MUST BE DONE FIRST ***">
		<propertyfile file="build.properties">
			<entry key="SRCDIR" value="."/>
			<entry key="BUILDDIR" value="."/>
			<entry key="TSRCDIR" value="tests"/>
			<entry key="TBUILDDIR" value="tests"/>
			<entry key="DOCDEST" value="docs"/>
			<entry key="DEPRECATION" value="on"/>
			<entry key="DEBUG" value="on"/>
			<entry key="VERBOSE" value="off"/>
			<!-- Location of extra jars for classpaths -->
			<entry key="JARPATH" value="${user.home}/lib/java"/>
		</propertyfile>

		<echo message=""/>
		<echo message="*** You must run your build again (ignore this failure)!"/>
		<echo message=""/>
		<fail message="You must run your build again"/>

	</target>

	<!-- this is a bit of indirection to allow the compile to require props -->
	<target name="all" depends="buildprops" if="hasBuildProps">
		<antcall target="compile"/>
	</target>

	<target name="compile" depends="rmic,dbstuff">
		<javac
			srcdir="${SRCDIR}"
			destdir="${BUILDDIR}"
			deprecation="${DEPRECATION}"
			debug="${DEBUG}"
			verbose="${VERBOSE}">

			<classpath refid="myclasses"/>
			<include name="net/spy/**/*.java"/>
		</javac>
	</target>

	<target name="spgen">
		<javac srcdir="${SRCDIR}"
			destdir="${BUILDDIR}"
			deprecation="${DEPRECATION}"
			debug="${DEBUG}"
			verbose="${VERBOSE}">

			<classpath refid="myclasses"/>
			<include name="net/spy/util/SPGen*.java"/>
		</javac>
		<taskdef name="spgen" classname="net.spy.util.SPGenTask">
			<classpath refid="myclasses"/>
		</taskdef>
	</target>

	<target name="test-spfiles" depends="all,spgen">
		<spgen srcdir="${TSRCDIR}" destdir="${TBUILDDIR}"/>
	</target>

	<target name="test-classes" depends="all,test-spfiles">
		<javac srcdir="${TSRCDIR}" destdir="${TBUILDDIR}"
			deprecation="${DEPRECATION}" debug="${DEBUG}" verbose="${VERBOSE}">
			<classpath refid="myclasses"/>
			<classpath refid="junitclasses"/>
			<include name="net/spy/**/*.java"/>
		</javac>
	</target>

	<target name="lookForTestJar">
		<available file="testsuite.jar" property="hasTestSuiteJar"/>
	</target>

	<target name="test-suite" depends="lookForTestJar" unless="hasTestSuiteJar">
		<antcall target="test-classes"/>
	</target>

  <target name="tests" depends="test-suite">
    <java classname="net.spy.test.AllTests">
			<classpath refid="myclasses"/>
			<classpath refid="junitclasses"/>
      <classpath>
        <pathelement path="${TBUILDDIR}"/>
			</classpath>
    </java>
  </target>

  <target name="tests-quick" depends="test-suite"
		description="Perform all tests that don't take all day.">
    <java classname="net.spy.test.QuickTests">
			<classpath refid="myclasses"/>
			<classpath refid="junitclasses"/>
      <classpath>
        <pathelement path="${TBUILDDIR}"/>
			</classpath>
    </java>
  </target>

  <target name="tests-gui" depends="test-suite"
		description="Start the JUnit GUI">
    <java classname="junit.swingui.TestRunner" fork="yes">
			<classpath refid="myclasses"/>
			<classpath refid="junitclasses"/>
      <classpath>
        <pathelement path="${TBUILDDIR}"/>
			</classpath>
    </java>
  </target>

	<target name="dbstuff" depends="types,resultset,preparedstatement,spfiles">
	</target>

	<!-- type name map -->
	<target name="types">
		<javac
			srcdir="${SRCDIR}" destdir="${BUILDDIR}"
			deprecation="${DEPRECATION}" debug="${DEBUG}" verbose="${VERBOSE}">
			<classpath refid="myclasses"/>
			<include name="net/spy/util/TypeNameGen.java"/>
		</javac>
		<java classname="net.spy.util.TypeNameGen">
			<arg value="net/spy/db/TypeNames.java"/>
			<classpath refid="myclasses"/>
		</java>
	</target>

	<target name="spfiles" depends="spgen">
		<spgen srcdir="${SRCDIR}" destdir="${BUILDDIR}"/>
	</target>

	<!-- Build the result set -->
	<target name="checkrsupdate">
		<uptodate property="rs.uptodate"
			srcfile="net/spy/db/CachedResultSetStub.java"
			targetfile="net/spy/db/CachedResultSet.java"/>
	</target>

	<!-- real target for the result set -->
	<target name="resultset" unless="rs.uptodate"
		depends="checkrsupdate,interfaceimplementor">
		<javac
			srcdir="${SRCDIR}" destdir="${BUILDDIR}"
			deprecation="${DEPRECATION}" debug="${DEBUG}" verbose="${VERBOSE}">
			<classpath refid="myclasses"/>
			<include name="net/spy/db/CachedResultSetStub.java"/>
		</javac>
		<java classname="net.spy.util.InterfaceImplementor" >
			<arg value="-interface"/>
				<arg value="java.sql.ResultSet"/>
			<arg value="-superclass"/>
				<arg value="net.spy.db.CachedResultSetStub"/>
			<arg value="-outputclass"/>
				<arg value="net.spy.db.CachedResultSet"/>
			<classpath refid="myclasses"/>
		</java>
	</target>

	<!-- Build the prepared statement set -->
	<target name="checkpstupdate">
		<uptodate property="pst.uptodate"
			srcfile="net/spy/db/CachePreparedStatementStub.java"
			targetfile="net/spy/db/CachePreparedStatement.java"/>
	</target>

	<!-- The real target for prepared statements -->
	<target name="preparedstatement" unless="pst.uptodate"
		depends="checkpstupdate,resultset,interfaceimplementor">
		<javac
			srcdir="${SRCDIR}" destdir="${BUILDDIR}"
			deprecation="${DEPRECATION}" debug="${DEBUG}" verbose="${VERBOSE}">
			<classpath refid="myclasses"/>
			<include name="net/spy/db/CachePreparedStatementStub.java"/>
		</javac>
		<java classname="net.spy.util.InterfaceImplementor" >
			<arg value="-interface"/>
				<arg value="java.sql.PreparedStatement"/>
			<arg value="-superclass"/>
				<arg value="net.spy.db.CachePreparedStatementStub"/>
			<arg value="-outputclass"/>
				<arg value="net.spy.db.CachePreparedStatement"/>
			<classpath refid="myclasses"/>
	</java>

	</target>

	<target name="interfaceimplementor">
		<javac
			srcdir="${SRCDIR}" destdir="${BUILDDIR}"
			deprecation="${DEPRECATION}" debug="${DEBUG}" verbose="${VERBOSE}">
			<classpath refid="myclasses"/>
			<include name="net/spy/util/InterfaceImplementor.java"/>
		</javac>
	</target>

	<target name="rmic" depends="pre-rmic">
		<rmic base="." classname="net.spy.rmi.RObjectImpl">
			<classpath refid="myclasses"/>
		</rmic>
	</target>

	<target name="pre-rmic">
		<javac
			srcdir="${SRCDIR}" destdir="${BUILDDIR}"
			deprecation="${DEPRECATION}" debug="${DEBUG}" verbose="${VERBOSE}">
			<classpath refid="myclasses"/>
			<include name="net/spy/rmi/RObjectImpl.java"/>
		</javac>
	</target>

	<!-- import scrubber -->
	<target name="scrubimports">
		<taskdef name="scrub"
			classname="net.sourceforge.importscrubber.ant.ImportScrubberTask">
			<classpath refid="myclasses"/>
			<classpath>
				<fileset dir="${user.home}/lib/importscrubber">
					<include name="*.jar"/>
				</fileset>
			</classpath>
		</taskdef>

		<scrub root="." format="each" sortjavalibshigh="true" recurse="true"/>
	</target>

	<!-- PMD code checker -->
	<target name="pmd">
		<taskdef name="pmd" classname="net.sourceforge.pmd.ant.PMDTask">
			<classpath>
				<fileset dir="${JARPATH}">
					<include name="pmd-0.3.jar"/>
				</fileset>
			</classpath>
		</taskdef>
		<pmd reportFile="pmd-unused-report.html"
			rulesetfiles="rulesets/unusedcode.xml"
			format="html">
			<fileset dir=".">
				<include name="net/spy/**/*.java"/>
			</fileset>
		</pmd>
		<pmd reportFile="pmd-basic-report.html"
			rulesetfiles="rulesets/basic.xml"
			format="html">
			<fileset dir=".">
				<include name="net/spy/**/*.java"/>
			</fileset>
		</pmd>
		<pmd reportFile="pmd-design-report.html"
			rulesetfiles="rulesets/design.xml"
			format="html">
			<fileset dir=".">
				<include name="net/spy/**/*.java"/>
			</fileset>
		</pmd>
	</target>

	<!-- checkstyle -->
	<target name="checkstyle">
		<taskdef name="checkstyle"
			classname="com.puppycrawl.tools.checkstyle.CheckStyleTask">
			<classpath>
				<fileset dir="${user.home}/lib/checkstyle">
					<include name="*.jar"/>
				</fileset>
			</classpath>
		</taskdef>

		<delete file="checkstyle.txt"/>

		<checkstyle
			allowtabs="yes"
			tabwidth="4"
			allowNoAuthor="yes"
			requirePackageHtml="yes"
			javadocScope="nothing"
			ignorewhitespace="yes">
			<fileset dir=".">
				<include name="net/spy/**/*.java"/>
			</fileset>
			<formatter type="plain" toFile="checkstyle.txt"/>
		</checkstyle>
	</target>

</project>
